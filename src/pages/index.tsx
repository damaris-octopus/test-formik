import SimpleForm from "@/components/simple-form/simple-form";
import { useFormik } from "formik";
import Head from "next/head";
import Link from "next/link";

enum GenderEnum {
  female = "female",
  male = "male",
  other = "other",
}

interface IFormInput {
  firstName: string;
  lastName: string;
  gender: GenderEnum | undefined;
}

let renderCounter = 0;

export default function Home() {
  renderCounter++;

  const formik = useFormik<IFormInput>({
    initialValues: {
      firstName: "",
      lastName: "",
      gender: undefined,
    },
    onSubmit: (values) => {
      console.log(values);
    },
  });

  return (
    <>
      <Head>
        <title>Formik</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ul>
        <li>
          Formik keeps track of your form's state and then exposes it plus a few
          reusable methods and event handlers (handleChange, handleBlur, and
          handleSubmit) to your form via props. handleChange and handleBlur work
          exactly as expected--they use a name or id attribute to figure out
          which field to update.
        </li>
      </ul>
    </>
  );
}
